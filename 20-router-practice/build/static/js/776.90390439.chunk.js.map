{"version":3,"file":"static/js/776.90390439.chunk.js","mappings":"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","sources":["webpack://client/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://client/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","webpack://client/./src/components/comments/Comments.module.css?d88e","webpack://client/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://client/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://client/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__kX6c+\"};","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__L7CmV\"};","import classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__BaO0U\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__ZXsCi\",\"loading\":\"NewCommentForm_loading__sQ140\",\"control\":\"NewCommentForm_control__8pw4P\",\"actions\":\"NewCommentForm_actions__bRvbU\"};","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst isEmpty = (value) => value.trim().length === 0;\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n    if (isEmpty(enteredText)) {\n      return;\n    }\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__6LhsL\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__kRT+l\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const params = useParams();\n  const { quoteId } = params;\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n    setIsAddingComment(false);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length > 0)\n  ) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect } from \"react\";\r\nimport { useParams, Routes, Route, Link } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if(error) {\r\n    return <p className=\"centered focused\">{error}</p>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Routes>\r\n        <Route\r\n          path='/'\r\n          element={\r\n            <div className='centered'>\r\n              <Link className='btn--flat' to='comments'>\r\n                See comments\r\n              </Link>\r\n            </div>\r\n          }\r\n        />\r\n        <Route path='comments' element={<Comments />} />\r\n      </Routes>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"],"names":["className","classes","Link","to","props","text","author","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","quoteId","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","trim","length","commentData","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useParams","useState","isAddingComment","setIsAddingComment","getAllComments","loadedComments","data","addedCommentHandler","useCallback","onClick","getSingleQuote","loadedQuote","path","element","NoQuotesFound"],"sourceRoot":""}